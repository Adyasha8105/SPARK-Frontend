{"version":3,"file":"index.umd.js","sources":["../compiled/hooks/useLottie.js","../compiled/hooks/useLottieInteractivity.js","../compiled/components/Lottie.js","../compiled/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\nimport lottie from \"lottie-web\";\nconst useLottie = (props, style) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, \n    // Specified here to take them out from the 'rest'\n    lottieRef, renderer, name, assetsPath, rendererSettings, \n    // TODO: find a better way to extract the html props to avoid specifying\n    //  all the props that we want to exclude (as you can see above)\n    ...rest } = props;\n    const [animationLoaded, setAnimationLoaded] = useState(false);\n    const animationInstanceRef = useRef();\n    const animationContainer = useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n    /**\n     * Play\n     */\n    const play = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n    const stop = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n    const pause = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n    const setSpeed = (speed) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n    const setDirection = (direction) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n    const playSegments = (segments, forceFlag) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n    const setSubframe = (useSubFrames) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => {\n        var _a;\n        return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);\n    };\n    /**\n     * Destroy animation\n     */\n    const destroy = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n    const loadAnimation = (forcedConfigs = {}) => {\n        var _a;\n        // Return if the container ref is null\n        if (!animationContainer.current) {\n            return;\n        }\n        // Destroy any previous instance\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Build the animation configuration\n        const config = {\n            ...props,\n            ...forcedConfigs,\n            container: animationContainer.current,\n        };\n        // Save the animation instance\n        animationInstanceRef.current = lottie.loadAnimation(config);\n        setAnimationLoaded(!!animationInstanceRef.current);\n    };\n    /**\n     * Initialize and listen for changes that need to reinitialize Lottie\n     */\n    useEffect(() => {\n        loadAnimation();\n    }, [animationData, loop, autoplay, initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n    /**\n     * Reinitialize listener on change\n     */\n    useEffect(() => {\n        const partialListeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const listeners = partialListeners.filter((listener) => listener.handler != null);\n        if (!listeners.length) {\n            return;\n        }\n        const deregisterList = listeners.map(\n        /**\n         * Handle the process of adding an event listener\n         * @param {Listener} listener\n         * @return {Function} Function that deregister the listener\n         */\n        (listener) => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\n            // Return a function to deregister this listener\n            return () => {\n                var _a;\n                (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n            };\n        });\n        // Deregister listeners on unmount\n        return () => {\n            deregisterList.forEach((deregister) => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * Build the animation view\n     */\n    const View = React.createElement(\"div\", Object.assign({ style: style, ref: animationContainer }, rest));\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        getDuration,\n        destroy,\n        animationLoaded,\n        animationItem: animationInstanceRef.current,\n    };\n};\nexport default useLottie;\n","import React, { useEffect, useRef } from \"react\";\n// helpers\nexport function getContainerVisibility(container) {\n    const { top, height } = container.getBoundingClientRect();\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    return current / max;\n}\nexport function getContainerCursorPosition(container, cursorX, cursorY) {\n    const { top, left, width, height } = container.getBoundingClientRect();\n    const x = (cursorX - left) / width;\n    const y = (cursorY - top) / height;\n    return { x, y };\n}\nexport const useInitInteractivity = ({ wrapperRef, animationItem, mode, actions, }) => {\n    useEffect(() => {\n        const wrapper = wrapperRef.current;\n        if (!wrapper || !animationItem) {\n            return;\n        }\n        animationItem.stop();\n        const scrollModeHandler = () => {\n            let assignedSegment = null;\n            const scrollHandler = () => {\n                const currentPercent = getContainerVisibility(wrapper);\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ visibility }) => visibility &&\n                    currentPercent >= visibility[0] &&\n                    currentPercent <= visibility[1]);\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                if (action.type === \"seek\" &&\n                    action.visibility &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const frameToGo = action.frames[0] +\n                        Math.ceil(((currentPercent - action.visibility[0]) /\n                            (action.visibility[1] - action.visibility[0])) *\n                            action.frames[1]);\n                    //! goToAndStop must be relative to the start of the current segment\n                    animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n                }\n                if (action.type === \"loop\") {\n                    // Loop: Loop a given frames\n                    if (assignedSegment === null) {\n                        // if not playing any segments currently. play those segments and save to state\n                        animationItem.playSegments(action.frames, true);\n                        assignedSegment = action.frames;\n                    }\n                    else {\n                        // if playing any segments currently.\n                        //check if segments in state are equal to the frames selected by action\n                        if (assignedSegment !== action.frames) {\n                            // if they are not equal. new segments are to be loaded\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                        else if (animationItem.isPaused) {\n                            // if they are equal the play method must be called only if lottie is paused\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                    }\n                }\n                if (action.type === \"play\" && animationItem.isPaused) {\n                    // Play: Reset segments and continue playing full animation from current position\n                    animationItem.resetSegments(true);\n                    animationItem.play();\n                }\n                if (action.type === \"stop\") {\n                    // Stop: Stop playback\n                    animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n                }\n            };\n            document.addEventListener(\"scroll\", scrollHandler);\n            return () => {\n                document.removeEventListener(\"scroll\", scrollHandler);\n            };\n        };\n        const cursorModeHandler = () => {\n            const handleCursor = (_x, _y) => {\n                let x = _x;\n                let y = _y;\n                // Resolve cursor position if cursor is inside container\n                if (x !== -1 && y !== -1) {\n                    // Get container cursor position\n                    const pos = getContainerCursorPosition(wrapper, x, y);\n                    // Use the resolved position\n                    x = pos.x;\n                    y = pos.y;\n                }\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ position }) => {\n                    if (position &&\n                        Array.isArray(position.x) &&\n                        Array.isArray(position.y)) {\n                        return (x >= position.x[0] &&\n                            x <= position.x[1] &&\n                            y >= position.y[0] &&\n                            y <= position.y[1]);\n                    }\n                    if (position &&\n                        !Number.isNaN(position.x) &&\n                        !Number.isNaN(position.y)) {\n                        return x === position.x && y === position.y;\n                    }\n                    return false;\n                });\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                // Process action types:\n                if (action.type === \"seek\" &&\n                    action.position &&\n                    Array.isArray(action.position.x) &&\n                    Array.isArray(action.position.y) &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const xPercent = (x - action.position.x[0]) /\n                        (action.position.x[1] - action.position.x[0]);\n                    const yPercent = (y - action.position.y[0]) /\n                        (action.position.y[1] - action.position.y[0]);\n                    animationItem.playSegments(action.frames, true);\n                    animationItem.goToAndStop(Math.ceil(((xPercent + yPercent) / 2) *\n                        (action.frames[1] - action.frames[0])), true);\n                }\n                if (action.type === \"loop\") {\n                    animationItem.playSegments(action.frames, true);\n                }\n                if (action.type === \"play\") {\n                    // Play: Reset segments and continue playing full animation from current position\n                    if (animationItem.isPaused) {\n                        animationItem.resetSegments(false);\n                    }\n                    animationItem.playSegments(action.frames);\n                }\n                if (action.type === \"stop\") {\n                    animationItem.goToAndStop(action.frames[0], true);\n                }\n            };\n            const mouseMoveHandler = (ev) => {\n                handleCursor(ev.clientX, ev.clientY);\n            };\n            const mouseOutHandler = () => {\n                handleCursor(-1, -1);\n            };\n            wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n            wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n            return () => {\n                wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n                wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n            };\n        };\n        switch (mode) {\n            case \"scroll\":\n                return scrollModeHandler();\n            case \"cursor\":\n                return cursorModeHandler();\n        }\n    }, [mode, animationItem]);\n};\nconst useLottieInteractivity = ({ actions, mode, lottieObj, }) => {\n    const { animationItem, View } = lottieObj;\n    const wrapperRef = useRef(null);\n    useInitInteractivity({ actions, animationItem, mode, wrapperRef });\n    return React.createElement(\"div\", { ref: wrapperRef }, View);\n};\nexport default useLottieInteractivity;\n","import { useEffect } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport useLottie from \"../hooks/useLottie\";\nimport useLottieInteractivity from \"../hooks/useLottieInteractivity\";\nconst Lottie = (props) => {\n    var _a;\n    const { style, interactivity, ...lottieProps } = props;\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    const { View, play, stop, pause, setSpeed, goToAndStop, goToAndPlay, setDirection, playSegments, setSubframe, getDuration, destroy, animationLoaded, animationItem, } = useLottie(lottieProps, style);\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n    useEffect(() => {\n        if (props.lottieRef) {\n            props.lottieRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                getDuration,\n                destroy,\n                animationLoaded,\n                animationItem,\n            };\n        }\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    if (interactivity) {\n        const EnhancedView = useLottieInteractivity({\n            lottieObj: {\n                View,\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndStop,\n                goToAndPlay,\n                setDirection,\n                playSegments,\n                setSubframe,\n                getDuration,\n                destroy,\n                animationLoaded,\n                animationItem,\n            },\n            ...interactivity,\n        });\n        return EnhancedView;\n    }\n    return View;\n};\nLottie.propTypes = {\n    animationData: PropTypes.shape(undefined).isRequired,\n    loop: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    autoplay: PropTypes.bool,\n    initialSegment: PropTypes.arrayOf(PropTypes.number.isRequired),\n    onComplete: PropTypes.func,\n    onLoopComplete: PropTypes.func,\n    onEnterFrame: PropTypes.func,\n    onSegmentStart: PropTypes.func,\n    onConfigReady: PropTypes.func,\n    onDataReady: PropTypes.func,\n    onDataFailed: PropTypes.func,\n    onLoadedImages: PropTypes.func,\n    onDOMLoaded: PropTypes.func,\n    onDestroy: PropTypes.func,\n    style: PropTypes.shape(undefined),\n};\nLottie.defaultProps = {\n    loop: true,\n    autoplay: true,\n    initialSegment: null,\n    onComplete: null,\n    onLoopComplete: null,\n    onEnterFrame: null,\n    onSegmentStart: null,\n    onConfigReady: null,\n    onDataReady: null,\n    onDataFailed: null,\n    onLoadedImages: null,\n    onDOMLoaded: null,\n    onDestroy: null,\n    style: undefined,\n};\nexport default Lottie;\n","import LottiePlayer from \"lottie-web\";\nimport Lottie from \"./components/Lottie\";\nimport useLottie from \"./hooks/useLottie\";\nimport useLottieInteractivity from \"./hooks/useLottieInteractivity\";\n// TODO: For backward compatibility, remove on v2\nexport const Animator = Lottie;\nexport const useAnimator = useLottie;\nexport { LottiePlayer, useLottie, useLottieInteractivity };\nexport default Lottie;\nexport * from \"./types\";\n"],"names":["useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","lottieRef","renderer","name","assetsPath","rendererSettings","rest","useState","animationLoaded","setAnimationLoaded","animationInstanceRef","useRef","animationContainer","play","_a","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segments","forceFlag","setSubframe","useSubFrames","getDuration","inFrames","destroy","loadAnimation","forcedConfigs","config","container","lottie","useEffect","partialListeners","handler","listeners","filter","listener","length","deregisterList","map","addEventListener","removeEventListener","forEach","deregister","View","React","createElement","Object","assign","ref","animationItem","getContainerVisibility","getBoundingClientRect","top","height","window","innerHeight","max","getContainerCursorPosition","cursorX","cursorY","left","width","x","y","useInitInteractivity","wrapperRef","mode","actions","wrapper","scrollModeHandler","assignedSegment","scrollHandler","currentPercent","action","find","visibility","type","frames","frameToGo","Math","ceil","firstFrame","isPaused","resetSegments","document","cursorModeHandler","handleCursor","_x","_y","pos","position","Array","isArray","Number","isNaN","xPercent","yPercent","mouseMoveHandler","ev","clientX","clientY","mouseOutHandler","useLottieInteractivity","lottieObj","Lottie","interactivity","lottieProps","EnhancedView","propTypes","PropTypes","undefined","isRequired","defaultProps","Animator","useAnimator"],"mappings":"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"}